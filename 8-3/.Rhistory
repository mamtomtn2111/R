library(readRDS)
employee <- readRDS("G:\\Tài liệu học tập\\2021-2022\\HK2\\Trực quan hóa dữ liệu\\FileProject\8-3\employee_data.rds")
employee <- readRDS("G:\\Tài liệu học tập\\2021-2022\\HK2\\Trực quan hóa dữ liệu\\FileProject\\8-3\\employee_data.rds")
employee <- readRDS("G:\\RCode\\employee_data.rds")
library(readr)
count(employee$job_level)
library(tidyverse)
library(dslabs)
count(employee$job_level)
names(employee$job_level)
str(employee$job_level)
view(employee)
is.factor(employee$left_company)
library(dplyr)
library(skimr)
install.packages("skimr")
names(employee$job_level)
names(employee)
skim(employee, left_company, salary, department)
library(skimr)
skim(employee, left_company, salary, department)
str(employee$job_level)
str(employee$department)
ninh <- str(employee$department)
ninh <- str(employee$department)
unique(employee$department)
unique(employee$job_level)
filter(employee$left_company == "Yes")
filter(employee,employee$left_company == "Yes")
LeftCompany <-  filter(employee,employee$left_company == "Yes")
View(LeftCompany)
LeftCompany <-  filter(employee,left_company == "Yes", Department = "Sale" )
LeftCompany <-  filter(employee,left_company == "Yes", Department == "Sale" )
LeftCompany <-  filter(employee,left_company == "Yes", Department == "Sales" )
LeftCompany <-  filter(employee,left_company == "Yes" & Department == "Sales" )
LeftCompany <-  filter(employee,left_company == "Yes", department == "Sales" )
View(LeftCompany)
gc()
library(readr)
library(tidyverse)
library(dslabs)
library(dplyr)
library(skimr)
employee <- readRDS("G:\\RCode\\employee_data.rds")
view(employee)
is.factor(employee$left_company)
names(employee)
unique(employee$job_level)
skim(employee, left_company, salary, department)
SalesLeftCompany <-  filter(employee,left_company == "Yes", department == "Sales" )
filter(employee, department %in% c('Sales', 'Marketing')) %>%
head()
filter(employee, department %in% c('Sales', 'Marketing'))
filter(employee, department %in% c('Sales', 'Marketing'))
filter(employee, department %in% c('Sales', 'Marketing')) %>%
head()
filter(employee, salary > 80000, department %in% c('Sales', 'Marketing')) %>%
head()
select(employee, contains('job')) %>%
head()
arrange(employee, left_company, salary) %>%
head()
select(employee_data_scaled, salary, salary_scaled) %>%
head()
employee_data_scaled <-  mutate(employee_data,
salary_scaled = (salary - mean(salary))/sd(salary))
select(employee_data_scaled, salary, salary_scaled) %>%
head()
employee_data_scaled <-  mutate(employee_data,
salary_scaled = (salary - mean(salary))/sd(salary))
select(employee_data_scaled, salary, salary_scaled) %>%
head()
employee_data_scaled <-  mutate(employee,
salary_scaled = (salary - mean(salary))/sd(salary))
select(employee_data_scaled, salary, salary_scaled) %>%
head()
employee %>%
mutate(hours_scaled = (weekly_hours - mean(weekly_hours)) / sd(weekly_hours)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_weekly_hours = mean(hours_scaled))
# Khởi tạo một biến mới theo z-score đặt tên là hours_scaled
employee %>%
mutate(hours_scaled = (weekly_hours - mean(weekly_hours)) / sd(weekly_hours)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_weekly_hours = max(hours_scaled))
# Khởi tạo một biến mới theo z-score đặt tên là hours_scaled
employee %>%
mutate(hours_scaled = (weekly_hours - mean(weekly_hours)) / sd(weekly_hours)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_weekly_hours = mean(hours_scaled))
names(employee)
employee_data_scaled <-  mutate(employee,
salary_scaled = (salary - mean(salary))/sd(salary))
select(employee_data_scaled, salary, salary_scaled) %>%
head()
employee %>%
mutate(employee,
salary_scaled = (salary - mean(salary))/sd(salary)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_weekly_salary = mean(salary_scaled))
employee %>%
mutate(employee,
salary_scaled = (salary - mean(salary))/sd(salary)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_weekly_salary = min(salary_scaled))
employee %>%
mutate(employee,
salary_scaled = (salary - mean(salary))/sd(salary)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_weekly_salary = mean(salary_scaled))
names(employee)
#miles_from_home
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_distances = mean(miles_from_home))
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_distances = max(miles_from_home))
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_distances = mean(miles_from_home))
#miles_from_home
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'Yes') %>%
summarise(avg_distances = mean(distances_scaled))
#miles_from_home
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'No') %>%
summarise(avg_distances = mean(distances_scaled))
#miles_from_home
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'No') %>%
summarise(avg_distances = min(distances_scaled))
#miles_from_home
employee %>%
mutate(employee,
distances_scaled = (miles_from_home - mean(miles_from_home))/sd(miles_from_home)) %>%
filter(left_company == 'No') %>%
summarise(avg_distances = mean(distances_scaled))
#Summarize salary
employee %>%
group_by(department) %>% # Sắp xếp theo nhóm phòng ban
summarise(average_salary = mean(salary)) # Thống kê theo từng nhóm
#Summarize salary
employee %>%
group_by(department) %>% # Sắp xếp theo nhóm phòng ban
summarise(average_salary = max(salary)) # Thống kê theo từng nhóm
#Summarize salary
employee %>%
group_by(department) %>% # Sắp xếp theo nhóm phòng ban
summarise(average_salary = mean(salary)) # Thống kê theo từng nhóm
str(employee)
employee %>%
group_by(department) %>%
summarise(number_employee = n())
employee %>%
count(job_satisfaction
f
employee %>%
count(job_satisfaction)
employee %>%
count(martial_status)
employee %>%
count(martial_status = n())
count(counts = n())
employee %>%
group_by(marital_status)
employee %>%
group_by(marital_status)
count(counts = n())
summarise(counts = n())
employee %>%
group_by(marital_status)
employee %>%
group_by(marital_status) %>%
summarise(counts = n())
employee %>%
group_by(left_company, job_level) %>%
summarise(employee = n())
employee %>%
group_by(left_company, job_level) %>%
summarise(employee = n()) %>%
ungroup() %>%
mutate(percent_of_total_employee = 100*(employee/sum(employee)))
employee %>%
group_by(left_company, job_level) %>%
summarise(employee = n()) %>%
ungroup() %>%
mutate(percent_of_total_employee = 100*(employee/sum(employee)))
