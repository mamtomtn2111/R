sum (missing values) -> total_missing
return(total_missing)
count_missing(myvector)
count_missing <- function(x)
{
is.na(x) -> missing_values
sum (missing values) -> total_missing
return(total_missing)
count_missing(myvector)
count_missing <- function(x)
{
is.na(x) -> missing_values
sum (missing values) -> total_missing
count_missing <- function(x)
{
is.na(x) -> missing_values
sum (missing values) -> total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) -> total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) -> total_missing
return(total_missing)
count_missing(myvector)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) -> total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values)
-> total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) ->
total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) = total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) = total_missing
return(total_missing)
}
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) -> total_missing
return(total_missing)
count_missing <- function(x){
is.na(x) -> missing_values
sum (missing values) <-  total_missing
return(total_missing)
}
install.packages("nycflights13")
library(nycflights13)
data(flights)
vector_missing_values <- c()
# Count the quantity of columns in flights
k <- ncol(flights)
# Using for loops to pull the data
for (i in 1:k){
flights %>%
pull(i) -> alternative values
library(ggplot2)
library(dplyr)
library(carData)
library(scales)
install.packages(carData)
install.packages("carData")
library(carData)
data(Salaries)
force(Salaries)
ggplot(data = Salaries, mapping = aes(x = salary, y = rank)) +
geom_point() +
lab(title = "The scatter plot rank and salary")
ggplot(data = Salaries, mapping = aes(x = salary, y = rank)) +
geom_point() +
labs(title = "The scatter plot rank and salary")
ggplot(data = Salaries, mapping = aes(x = salary, y = rank)) +
geom_point() +
labs(title = "The scatter plot rank and salary") +
geom_fitter()
ggplot(data = Salaries, mapping = aes(x = salary, y = rank)) +
geom_point() +
labs(title = "The scatter plot rank and salary") +
geom_jitter()
#tạo biểu đồ hoàn chỉnh
ggplot(data = Salaries, mapping = aes(x = Salaries, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank))
ggplot(data = Salaries, mapping = aes(x = Salaries, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_point()
ggplot(data = Salaries, mapping = aes(x = salarys, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_point()
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_point()
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_jitter(alpha = 0.7, size = 1.5)
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_jitter(alpha = 0.7, size = 1.5) +
theme_minimal()
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_jitter(alpha = 0.7, size = 1.5) +
theme_minimal() +
thêm(legend.position = "none")
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_jitter(alpha = 0.7, size = 1.5) +
theme_minimal() +
theme(legend.position = "none")
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_jitter(alpha = 0.7, size = 1.5) +
theme_minimal() +
theme(legend.position = "none") +
labs(title = "The strip plot between rank and salary",
subtitle = "The salary for 9 months",
x = "", y = "", caption = "www.dataset.org")
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank)) +
geom_jitter(alpha = 0.7, size = 1.5) +
theme_minimal() +
theme(legend.position = "none") +
labs(title = "The strip plot between rank and salary",
subtitle = "The salary for 9 months",
x = "", y = "", caption = "www.dataset.org") +
scale_x_continuous(label = dollar)
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank))+
theme_minimal() +
geom_boxplot(size = 1, outlier.shape = 2, outlier.colour = "red", outlier.size = 2.5, alpha = 0.3) +
theme(legend.position = "none") +
labs(title = "The strip plot between rank and salary",
subtitle = "The salary for 9 months",
x = "", y = "", caption = "www.dataset.org") +
scale_x_continuous(label = dollar)
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank))+
theme_minimal() +
geom_boxplot(size = 1, outlier.shape = 2, outlier.colour = "red", outlier.size = 2.5, alpha = 0.3) +
theme(legend.position = "none") +
labs(title = "The strip plot between rank and salary",
subtitle = "The salary for 9 months",
x = "", y = "", caption = "www.dataset.org") +
scale_x_continuous(label = dollar)
ggplot(data = Salaries, mapping = aes(x = salary, y = factor(rank,
labels = c("Assistant\nProfessor","Associate\nProfessor","Professor")), color = rank))+
geom_jitter(alpha = 0.7, size = 1.5) +
theme_minimal() +
geom_boxplot(size = 1, outlier.shape = 2, outlier.colour = "red", outlier.size = 2.5, alpha = 0.3) +
theme(legend.position = "none") +
labs(title = "The strip plot between rank and salary",
subtitle = "The salary for 9 months",
x = "", y = "", caption = "www.dataset.org") +
scale_x_continuous(label = dollar)
library(gapminder)
data(gapminder)
library(gapminder)
data(gapminder)
plotdata <- gapminder %>%
filter(continent = "Asia" & year = 2007)
plotdata <- gapminder %>%
filter(continent == "Asia" & year == 2007)
ggplot(data = plotdata, mapping = aes(x = lifeExp, y = reorder(country, lifeExp))) +
geom_point()
plotdata <- gapminder %>%
filter(continent == "Asia" & year == 2007)
ggplot(data = plotdata, mapping = aes(x = lifeExp, y = reorder(country, lifeExp))) +
geom_point(color = "blue", size = 2.5) +
geom_segment(aes(x = 40,
xend = lifeExp,
y = reorder(country, lifeExp),
yend = reorder(country, lifeExp)),
color = "#00a4ef") +
labs(x = "Life expectancy (years)",
y = "",
title = "Life expectancy by country",
subtitle = "Gapminder data for Asia -2007")+
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
data("Salaries")
library(ggplot2)
library(dplyr)
library(carData)
library(scales)
data("Salaries")
names(salaries)
name(salaries)
names(Salaries)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank)) +
geom_point() +
labs(title = "Academic salaries by rank")
#Show the visualization by gender
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
shape = sex)) +
geom_point() +
labs(title = "Academic salaries by rank")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
shape = sex)) +
geom_point(size = 3, alpha = 0.6) +
labs(title = "Academic salaries by rank")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
size = yrs.service)) +
geom_point(size = 3, alpha = 0.6) +
labs(title = "Academic salaries by rank")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
size = yrs.service)) +
geom_point(alpha = 0.6) +
labs(title = "Academic salaries by rank")
View(Salaries)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank)) +
geom_point() +
labs(title = "Academic salaries by rank")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
size = yrs.service)) +
geom_point(alpha = 0.6) +
labs(title = "Academic salaries by rank")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
size = yrs.service)) +
geom_point(size = 3, alpha = 0.6) +
labs(title = "Academic salaries by rank")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", SE = FALSE)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", SE = FALSE, formula = = y ~ poly(x, 2), size = 1.5)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", SE = FALSE, formula =  y ~ poly(x, 2), size = 1.5)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", SE = TRUE, formula =  y ~ poly(x, 2), size = 1.5)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", SE = TRUE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(pelette = "Set1")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", SE = TRUE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(pelette = "Set1")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", se = FALSE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(pelette = "Set1")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", se = TRUE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(palette = "Set1")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", se = FALSE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(palette = "Set1")
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", se = TRUE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(palette = "Set1")
who <- read.csv("D:\\Tài liệu học tập\\2021-2022\\HK2\\Trực quan hóa dữ liệu\\who_disease.csv",header = TRUE)
gc()
gc()
amr_region <- who_disease %>%
filter(region == 'AMR')
amr_region <- who_disease %>%
filter(region == 'AMR')
who_disease <- read.csv("D:\\Tài liệu học tập\\2021-2022\\HK2\\Trực quan hóa dữ liệu\\who_disease.csv",header = TRUE)
amr_region <- who_disease %>%
filter(region == 'AMR')
ggplot(amr_region, aes(x = year, y = cases, color = disease)) +
geom_point(alpha = 0.5)
who_disease %>%
mutate(
region = ifelse(
region %in% c('EUR', 'AFR'),
region, 'Other')
) %>%
ggplot(aes(x = 1, fill = region)) +
geom_bar(color = 'white') +
coord_polar(theta = "y") +
theme_void()
obs_by_region <- who_disease %>%
group_by(region) %>% summarise(num_obs = n()) %>%
mutate(percent = round(num_obs/sum(num_obs)*100))
# Array of rounded percentages
percent_by_region <- obs_by_region$percent
names(percent_by_region) <- obs_by_region$region
# Send array of percentages to waffle plot function
waffle::waffle(percent_by_region, rows = 5)
install.packages("waffle")
obs_by_region <- who_disease %>%
group_by(region) %>% summarise(num_obs = n()) %>%
mutate(percent = round(num_obs/sum(num_obs)*100))
# Array of rounded percentages
percent_by_region <- obs_by_region$percent
names(percent_by_region) <- obs_by_region$region
# Send array of percentages to waffle plot function
waffle::waffle(percent_by_region, rows = 5)
who_disease %>%
filter(region == 'SEAR') %>%
ggplot(aes(x = countryCode, y = cases, fill = disease)) +
geom_col(position = 'fill')
gc()
library(ggplot2)
library(dplyr)
library(carData)
library(scales)
data("Salaries")
#names(Salaries)
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank)) +
geom_point() +
labs(title = "Academic salaries by rank")
#Show the visualization by gender
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
shape = sex)) +
geom_point(size = 3, alpha = 0.6) +
labs(title = "Academic salaries by rank")
#Show bubble by yrs service
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = rank,
size = yrs.service)) +
geom_point(size = 3, alpha = 0.6) +
labs(title = "Academic salaries by rank")
#creating the linear regression or plynomial regression
ggplot(data = Salaries, mapping = aes(x = yrs.since.phd, y = salary, color = sex)) +
geom_point(size = 3, alpha = 0.4) +
geom_smooth(method = "lm", se = TRUE, formula =  y ~ poly(x, 2), size = 1.5)  +
labs(x = "years Since Ph.D",
title = "Academic salary by Sex and Years Experience",
caption = "Https//:www.salary.org",
y = "",
color = "Sex") +
scale_y_continuous(label = dollar) +
scale_color_brewer(palette = "Set1")
ggplot(data = Salaries, mapping = aes(x = salary)) +
geom_histogram(fill = "cornflowerblue", color = 'white') +
facet_wrap(~ rank, ncol = 1)
ggplot(data = Salaries, mapping = aes(x = salary)) +
geom_histogram(fill = "cornflowerblue", color = 'white') +
facet_wrap(~ rank, nrow = 1)
ggplot(data = Salaries, mapping = aes(x = salary)) +
geom_histogram(fill = "cornflowerblue", color = 'white') +
facet_wrap(~ rank, ncol = 1)
ggplot(data = Salaries, mapping = aes(x = salary)) +
geom_histogram(fill = "cornflowerblue", color = 'white') +
facet_wrap(~ rank, ncol = 1)
gc()
ggplot(data = Salaries, mapping = aes(x = salary)) +
geom_histogram(fill = "cornflowerblue", color = 'white') +
facet_grid(sex ~ rank) +
labs(title = "Salary by rank with faceting", x = "", y = "") +
scale_x_continuous(label = dollar)
library(gapminder)
data(gapminder)
ggplot(data = plotdata, mapping = aes(x = year, y = lifeExp)) +
geom_line(color = "grey") +
geom_point(color = "blue") +
facet_wrap(~ country) +
theme_minimal(base_size = 9) +
theme(axis.line.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Changes in Life expectancy",
X = "Year",
y = "Life Expectancy")
plotdata <- gapminder %>%
filter(continent = "Asia")
#Visualization
data(gapminder)
ggplot(data = plotdata, mapping = aes(x = year, y = lifeExp)) +
geom_line(color = "grey") +
geom_point(color = "blue") +
facet_wrap(~ country) +
theme_minimal(base_size = 9) +
theme(axis.line.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Changes in Life expectancy",
X = "Year",
y = "Life Expectancy")
data(gapminder)
plotdata <- gapminder %>%
filter(continent = "Asia")
plotdata <- gapminder %>%
filter(continent = "Asia")
#Visualization
ggplot(data = plotdata, mapping = aes(x = year, y = lifeExp)) +
geom_line(color = "grey") +
geom_point(color = "blue") +
facet_wrap(~ country) +
theme_minimal(base_size = 9) +
theme(axis.line.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Changes in Life expectancy",
X = "Year",
y = "Life Expectancy")
plotdata <- gapminder %>%
filter(continent = "Asia")
data(gapminder)
plotdata <- gapminder %>%
filter(continent == "Asia")
#Visualization
data(gapminder)
plotdata <- gapminder %>%
filter(continent == "Asia")
#Visualization
ggplot(data = plotdata, mapping = aes(x = year, y = lifeExp)) +
geom_line(color = "grey") +
geom_point(color = "blue") +
facet_wrap(~ country) +
theme_minimal(base_size = 9) +
theme(axis.line.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Changes in Life expectancy",
X = "Year",
y = "Life Expectancy")
ggplot(data = plotdata, mapping = aes(x = year, y = lifeExp)) +
geom_line(color = "grey") +
geom_point(color = "blue") +
facet_wrap(~ country) +
theme_minimal(base_size = 9) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Changes in Life expectancy",
X = "Year",
y = "Life Expectancy")
install.packages("quantmod")
library(quantmod)
gc()
getSymbols("AAPL")
head(AAPL)
tail(AAPL)
Open <- Op(AAPL)
Close <- Cl(AAPL)
View(Close)
View(Open)
head(AAPL)
AAPL <- first(AAPL, '3 years')
head(AAPL)
AAPL <- first(AAPL, '3 years')
head(AAPL)
AAPL <- last(AAPL, "1 year")
head(AAPL)
AAPL <- first(AAPL, "1 year")
head(AAPL)
AAPL <- last(AAPL, "1 year")
head(AAPL)
AAPL <- first(AAPL, '3 years')
head(AAPL)
AAPL <- first(AAPL, '3 years')
AAPL <- last(AAPL, "1 year")
head(AAPL)
AAPL <- first(AAPL, '3 year')
AAPL <- first(AAPL, '3 years')
AAPL <- last(AAPL, '3 years')
AAPL <- first(AAPL, '3 years')
head(AAPL)
getSymbols(c("AAPL","GOOG"))
getSymbols("AAPL")
AAPL <- first(AAPL, '3 years')
head(AAPL)
getSymbols("AAPL")
chartSeries(VIC, type = "bar", subset = "2007-05::2007-06")
chartSeries(VIC, type = "line")
getSymbols(c("AAPL","GOOG"))
stocklist <- c("AAPL","GOOG","VIC")
getSymbols(stocklist)
chartSeries(VIC, type = "line")
chartSeries(VIC, type = "bar", subset = "2007-05::2007-06")
chartSeries(VIC, type = "line")
chartSeries(VIC, type = "bar", subset = "2007-05::2007-06")
chartSeries(VIC, type = "line")
chartSeries(VIC, type = "bar", subset = "2012-05::2012-06")
chartSeries(VIC, type = "line")
