plot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line() +
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate")
library(ggplot2)
library(dplyr)
library(scales)
data("economics")
#Visualize with line graphs
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line() +
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate")
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate")
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
scale_x_date(date_breaks = "5 years", labels = date_format("%b-%y"))+
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate") +
theme_minimal()
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth()+
scale_x_date(date_breaks = "5 years", labels = date_format("%b-%y"))+
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate") +
theme_minimal()
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth()+
scale_x_date(date_breaks = "5 years", labels = date_format("%M-%y"))+
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate") +
theme_minimal()
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth()+
scale_x_date(date_breaks = "5 years", labels = date_format("%m-%y"))+
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate") +
theme_minimal()
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth()+
scale_x_date(date_breaks = "5 years", labels = date_format("%b-%y"))+
labs(title = " Personal Savings rate",
x = "Data",
y = "Personal Savings rate") +
theme_minimal()
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.fram",
from = "2021-03-01")
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.fram",
from = "2021-03-01")
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.fram",
from = "2021-03-01")
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(rwo.names(.)))
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2020-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
facebook <- getSymbols("FB", return.class = "data.frame",
from = "2020-03-01")
facebook <- FB %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, FB.Close) %>%
rename(Close = DB.Close) %>%
mutate(Company = "Facebook")
rbind(apple, facebook) -> data_timeseries
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2020-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
facebook <- getSymbols("FB", return.class = "data.frame",
from = "2020-03-01")
facebook <- FB %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, FB.Close) %>%
rename(Close = FB.Close) %>%
mutate(Company = "Facebook")
rbind(apple, facebook) -> data_timeseries
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")
exit()
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y"))
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400))
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50))
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From 2020 to 2022",
caption = "Source: Yahoo finace",
x = "",
y = "Closing Prices") +
scale_color_brewer(palette = "Set1")
library(ggthemes)
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From 2020 to 2022",
caption = "Source: Yahoo finace",
x = "",
y = "Closing Prices") +
scale_color_brewer(palette = "Set1") +
theme_economist()
#Visualization
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From 2020 to 2022",
caption = "Source: Yahoo finace",
x = "",
y = "Closing Prices") +
scale_color_brewer(palette = "Set1")
áº½it
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From 2020 to 2022",
caption = "Source: Yahoo finace",
x = "",
y = "Closing Prices") +
scale_color_brewer(palette = "Set1")
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From 2020 to 2022",
caption = "Source: Yahoo finace",
x = "",
y = "Closing Prices") +
scale_color_brewer(palette = "Set1") +
theme_economist()
library(ggalt)
install.packages("ggalt")
library(ggalt)
library(ggplot2)
library(gapminder)
library(dplyr)
library(tidyr)
data(gapminder)
plotdate <- filter(gapminder,
continent == "Asia" & year %in% c(1952,2007))
data(gapminder)
plotdata <- filter(gapminder,
continent == "Asia" & year %in% c(1952,2007)) %>%
select(country, year, lifeExp)
View(plotdata)
library(ggalt)
library(ggplot2)
library(gapminder)
library(dplyr)
library(tidyr)
data(gapminder)
plotdata_long <- filter(gapminder,
continent == "Asia" & year %in% c(1952,2007)) %>%
select(country, year, lifeExp)
# Convert from longdata to wide data
plotdata_wide <- spread(plotdata_long, year, lifeExp)
names(plotdata_wide) <- c("Country", "Year1952", "Year2007")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = Country, x = Year1952,
xend = Year2007))
View(plotdata_wide)
ggplot(data = plotdata_wide, mapping = aes(y = Country, x = Year1952,
xend = Year2007))
library(ggalt)
library(ggplot2)
library(gapminder)
library(dplyr)
library(tidyr)
data(gapminder)
plotdata_long <- filter(gapminder,
continent == "Asia" & year %in% c(1952,2007)) %>%
select(country, year, lifeExp)
# Convert from longdata to wide data
plotdata_wide <- spread(plotdata_long, year, lifeExp)
names(plotdata_wide) <- c("Country", "Year1952", "Year2007")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = Country, x = Year1952,
xend = Year2007))
library(ggalt)
library(ggplot2)
library(gapminder)
library(dplyr)
library(tidyr)
data(gapminder)
plotdata_long <- filter(gapminder,
continent == "Asia" & year %in% c(1952,2007)) %>%
select(country, year, lifeExp)
# Convert from longdata to wide data
plotdata_wide <- spread(plotdata_long, year, lifeExp)
names(plotdata_wide) <- c("Country", "Year1952", "Year2007")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = Country, x = Year1952,
xend = Year2007))
library(ggalt)
library(ggplot2)
library(gapminder)
library(dplyr)
library(tidyr)
data(gapminder)
plotdata_long <- filter(gapminder,
continent == "Asia" & year %in% c(1952,2007)) %>%
select(country, year, lifeExp)
# Convert from longdata to wide data
plotdata_wide <- spread(plotdata_long, year, lifeExp)
names(plotdata_wide) <- c("Country", "Year1952", "Year2007")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = Country, x = Year1952,
xend = Year2007))
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = Country, x = Year1952,
xend = Year2007)) +
geom_dumbbell()
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell()
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, -Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell()
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, -Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell(size = 1.3, size_x = 3, size_xend = 3,
colour_x = "blue", colour_xend = "red",
colour = "grey") +
labs(title = "Change in life Expectancy",
subtitle = "From 1952 to 2007",
caption = "source: www.gapminder-org.us",
y = "",
x = "Life expectancy (years)")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, -Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell(size = 1.3, size_x = 3, size_xend = 3,
colour_x = "blue", colour_xend = "red",
colour = "grey") +
labs(title = "Change in life Expectancy",
subtitle = "From 1952 to 2007",
caption = "source: www.gapminder-org.us",
y = "",
x = "Life expectancy (years)") +
theme_economist()
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, -Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell(size = 1.3, size_x = 3, size_xend = 3,
colour_x = "blue", colour_xend = "red",
colour = "grey") +
labs(title = "Change in life Expectancy",
subtitle = "From 1952 to 2007",
caption = "source: www.gapminder-org.us",
y = "",
x = "Life expectancy (years)")
#theme_economist()
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell(size = 1.3, size_x = 3, size_xend = 3,
colour_x = "blue", colour_xend = "red",
colour = "grey") +
labs(title = "Change in life Expectancy",
subtitle = "From 1952 to 2007",
caption = "source: www.gapminder-org.us",
y = "",
x = "Life expectancy (years)")
plotdata_long <- filter(gapminder,
continent == "Europe" & year %in% c(1952,2007)) %>%
select(country, year, gdpPercap)
# Convert from longdata to wide data
plotdata_wide <- spread(plotdata_long, year, gdpPercap)
names(plotdata_wide) <- c("Country", "Year1952", "Year2007")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell(size = 1.3, size_x = 3, size_xend = 3,
colour_x = "green", colour_xend = "cornflowerblue",
colour = "grey") +
labs(title = "Change in GDP/person",
subtitle = "From 1952 to 2007",
caption = "source: www.gapminder-org.us",
y = "",
x = "GDP (USD)") -> p2
#theme_economist()
plotdata_wide <- spread(plotdata_long, year, lifeExp)
names(plotdata_wide) <- c("Country", "Year1952", "Year2007")
#Make the dumbell chart
ggplot(data = plotdata_wide, mapping = aes(y = reorder(Country, Year1952), x = Year1952,
xend = Year2007)) +
geom_dumbbell(size = 1.3, size_x = 3, size_xend = 3,
colour_x = "blue", colour_xend = "red",
colour = "grey") +
labs(title = "Change in life Expectancy",
subtitle = "From 1952 to 2007",
caption = "source: www.gapminder-org.us",
y = "",
x = "Life expectancy (years)") -> p1
#theme_economist()
grid.arrange(p1, p2, nrow = 1)
install.packages("gridBase")
grid.arrange(p1, p2, nrow = 1)
library(grid)
grid.arrange(p1, p2, nrow = 1)
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
