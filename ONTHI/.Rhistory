ggplot(data = Boston, mapping = aes(x = factor(1), fill = as.factor(rad))) +
geom_bar(stat = "count") +
coord_polar("y")+
labs(fill = "chas",title = "The number of house in front of charles river")
#Visualization by pie chart
ggplot(data = Boston, mapping = aes(x = factor(1), fill = as.factor(chas))) +
geom_bar(stat = "count") +
coord_polar("y")+
labs(fill = "chas",title = "The number of house in front of charles river")
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat))+
geom_point(size = 2, colour = "indianred3", alpha = 0.5)
??Boston
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(chas)))+
geom_point(size = 2, colour = "indianred3", alpha = 0.5)
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(chas)))+
geom_point(size = 2, colour = "indianred3", alpha = 0.5)
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(chas)))+
geom_point(size = 2, alpha = 0.5)
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(rad)))+
geom_point(size = 2, alpha = 0.5)
install.packages("ggExtra")
library(ggExtra)
p <- ggplot(data = Boston, mapping = aes(x = medv, y = lstat, color = rad)) +
geom_point()
ggMarginal(p, type = "histogram")
ggMarginal(p, type = "histogram") ->s1
ggMarginal(p, type = "density") ->s2
ggMarginal(p, type = "boxplot") ->s3
ggMarginal(p, type = "violin") ->s4
ggMarginal(p, type = "densigram") ->s5
library(grid)
library(gridExtra)
grid.arrange(s1,s2,s3,s4,s5, ncol = 3)
library(corrplot)
Boston_num <-  Boston[, -c(4,9)]
Boston_num <-  Boston[, -c(4,9)]
#using the base
cor_matrix <- cor(Boston_num)
cor_matrix <- round(cor_matrix, 2)
ggcorrplot::ggcorrplot(cor_matrix, hc.order = True)
ggcorrplot::ggcorrplot(cor_matrix, hc.order = TRUE)
#Using the numerical correlation
corrplot(cor_matrix, method = "number", type = "upper", diag = FALSE)
corrplot(cor_matrix, method = "shade", type = "upper", diag = FALSE)
corrplot(cor_matrix, method = "shade", type = "lower", diag = FALSE)
all values
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(- key, scales = "free") +
theme_gray()
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(- key, scales = "free") +
theme_gray()
#Histogram of all values
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
#Histogram of all values
ggplot(Boston,mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
#Histogram of all values
ggplot(data = Boston,mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
)
#Histogram of all values
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
hist.data.frame(Boston)
hist.data.frame(Boston)
install.packages("caToon")
install.packages("caTool")
install.packages("caTools")
mydata <-  Boston
gc()
mydata <-  Boston
View(mydata)
mydata <-  Boston
mydata["ID"] <- c(1:506)
set.seed(123)
View(mydata)
#Train model
library(caTools)
split <- sample.split(mydata$ID, SplitRatio = 2/3)
table(split)
training_data <- subset(mydata, split == TRUE)
testing_data <- subset(mydataa, split == FALSE)
testing_data <- subset(mydata, split == FALSE)
#model
model1 <- lm(medv ~ lstat + age + rm, data = training_data)
View(model1)
summary(model1)
#prediction in training data
prediction_training <- predict(model1, training_dÃ¢t)
#prediction in training data
prediction_training <- predict(model1, training_data)
SSR_training <- sum((prediction_training - training_data$medv)^2)
SST_training <- sum((mean(training_data$medv) - training_data$medv)^2)
#The coeficient of datemindation
R2_training <- 1 - (SSR_training/SST_training)
testing_training <- predict(model1, testing_data)
SSR_testing <- sum((testing_training - testing_data$medv)^2)
SST_testing <- sum((mean(training_data$medv) - testing_data$medv)^2)
#The coeficient of datemindation
R2_training <- 1 - (SSR_testing/SST_testing)
prediction_training <- predict(model1, training_data)
SSR_training <- sum((prediction_training - training_data$medv)^2)
SST_training <- sum((mean(training_data$medv) - training_data$medv)^2)
#The coeficient of datemindation
R2_training <- 1 - (SSR_training/SST_training)
testing_training <- predict(model1, testing_data)
SSR_testing <- sum((testing_training - testing_data$medv)^2)
SST_testing <- sum((mean(training_data$medv) - testing_data$medv)^2)
#The coeficient of datemindation
R2_testing <- 1 - (SSR_testing/SST_testing)
install.packages("ggfortify")
data("Salaries", package = "mosaicData")
data("salaries", package = "mosaicData")
library(mosaicData)
data("salaries")
data("Salaries")
data("Salary")
data("salary")
data("Salaries")
library(carData)
data("Salaries")
force(Salaries)
View(Salaries)
data("CPS85")
mydata <- CPS85
View(mydata)
data(gapminder)
library(gapminder)
data(gapminder)
force(gapminder)
force(gapminder)
View(gapminder)
wages
View(CPS85)
library(mosaicData)
data("CPS85")
force(CPS85)
View(CPS85)
library(gapminder)
data(wages)
data(wages)
data(wages)
??wages
install.packages("ISLR")
library(ISLR)
data(wages)
library("ISLR")
??wages
library(ggplot2)
library(scales)
library(dplyr)
data("economics")
economics %>% head()
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line() +
labs(title = "Personal Savings Rate",
x = "Date",
y = "Personal Savings Rate")
library(quantmod)
library(dplyr)
library(ggplot2)
library(scales)
# Take data for Apple
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-05")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
# Take data for Facebook
facebook <- getSymbols("FB", return.class = "data.frame",
from = "2021-05-05")
facebook <- FB %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, FB.Close) %>%
rename(Close = FB.Close) %>%
mutate(Company = "Facebook")
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line() +
labs(title = "Personal Savings Rate",
x = "Date",
y = "Personal Savings Rate")
library(quantmod)
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth() +
scale_x_date(date_breaks = "5 years", labels = date_format("%b-%y")) +
labs(title = "Personal Savings Rate",
subtitle = "From 1967 to 2015",
x = "",
y = "Personal Savings Rate") +
theme_minimal()
library(quantmod)
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-05")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
library(ggthemes)
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
View(AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2020-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
library(ggthemes)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2020-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
library(quantmod)
library(dplyr)
library(scales)
library(ggplot2)
library(ggthemes)
#collecting data for apple (AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2020-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
facebook <- getSymbols("FB", return.class = "data.frame",
from = "2020-03-01")
facebook <- FB %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, FB.Close) %>%
rename(Close = FB.Close) %>%
mutate(Company = "Facebook")
rbind(apple, facebook) -> data_timeseries
#Visualization
ggplot(data = data_timeseries, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month", labels = date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1 )) +
scale_y_continuous(limits = c(100, 400), breaks = seq(100, 400, 50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From 2020 to 2022",
caption = "Source: Yahoo finace",
x = "",
y = "Closing Prices") +
scale_color_brewer(palette = "Set1") +
theme_economist()
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-05")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth() +
scale_x_date(date_breaks = "5 years", labels = date_format("%b-%y")) +
labs(title = "Personal Savings Rate",
subtitle = "From 1967 to 2015",
x = "",
y = "Personal Savings Rate") +
theme_minimal()
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.)))
library(ggplot2)
library(scales)
library(dplyr)
data("economics")
economics %>% head()
#Mo phong du lieu kinh te My
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line() +
labs(title = "Personal Savings Rate",
x = "Date",
y = "Personal Savings Rate")
ggplot(data = economics, mapping = aes(x = date, y = psavert)) +
geom_line(color = "indianred3", size = 1) +
geom_smooth() +
scale_x_date(date_breaks = "5 years", labels = date_format("%b-%y")) +
labs(title = "Personal Savings Rate",
subtitle = "From 1967 to 2015",
x = "",
y = "Personal Savings Rate") +
theme_minimal()
library(quantmod)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-05")
View(AAPL)
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
View(AAPL)
View(economics)
View(AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-06")
View(AAPL)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-05")
# Take data for Facebook
facebook <- getSymbols("FB", return.class = "data.frame",
from = "2021-05-05")
facebook <- FB %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, FB.Close) %>%
rename(Close = FB.Close) %>%
mutate(Company = "Facebook")
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2020-03-01")
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = as.Date(substr(row.names(.),1,))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = as.Date(substr(row.names(.),1,.))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
View(AAPL)
apple <- AAPL %>%
mutate(Date = as.Date(substr(row.names(.),1,10))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = as.Date(substr(row.names(.),2,10))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = substr(row.names(.),2,10))
View(apple)
library(ggplot2)
library(scales)
library(dplyr)
library(quantmod)
apple <- getSymbols("AAPL", return.class = "data.frame",
from = "2021-05-05")
apple <- AAPL %>%
mutate(Date = as.Date(substr(row.names(.),2,11))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = substr(row.names(.),2,11))
View(apple)
apple <- AAPL %>%
mutate(Date = as.Date(substr(row.names(.),2,11))) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(Date = as.Date(Date)) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- apple %>%
mutate(Date = as.Date(Date)) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
View(apple)
apple <- AAPL %>%
mutate(Date1 = substr(row.names(.),2,11))
apple <- apple %>%
mutate(Date = as.Date(Date1)) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple1 <- apple %>%
mutate(Date = as.Date(Date1)) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
apple <- AAPL %>%
mutate(row.names(.) = substr(row.names(.),2,11)) %>%
apple <- AAPL %>%
mutate(row.names(.) = substr(row.names(.),2,11))
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.),format = "X%Y.%m.%d")) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
View(apple)
apple <- AAPL %>%
mutate(Date = as.Date(row.names(.),format = "X%Y.%m.%d")) %>%
select(Date, AAPL.Close) %>%
rename(Close = AAPL.Close) %>%
mutate(Company = "Apple")
View(apple)
facebook <- getSymbols("FB", return.class = "data.frame",
from = "2021-05-05")
facebook <- FB %>%
mutate(Date = as.Date(row.names(.),format = "X%Y.%m.%d")) %>%
select(Date, FB.Close) %>%
rename(Close = FB.Close) %>%
mutate(Company = "Facebook")
ggplot(data = data_series, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month",
label = date_format("%b-%Y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(limits = c(100, 450), breaks = seq(100,400,50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From May 2021 to February 2022",
caption = "source: Yahoo Finance",
x = "",
y = "Closing Price") +
scale_color_brewer(palette = "Set1")
data_series <- rbind(apple, facebook)
ggplot(data = data_series, mapping = aes(x = Date, y = Close,
color = Company)) +
geom_line(size = 1) +
scale_x_date(date_breaks = "1 month",
label = date_format("%b-%Y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(limits = c(100, 450), breaks = seq(100,400,50),
labels = dollar) +
labs(title = "NASDAQ Closing Prices",
subtitle = "From May 2021 to February 2022",
caption = "source: Yahoo Finance",
x = "",
y = "Closing Price") +
scale_color_brewer(palette = "Set1")
View(data_series)
library(ggalt)
library(tidyr)
library(gapminder)
data(gapminder)
# Subset the data
plotdata_long <- filter(gapminder, continent == "Asia" &
year %in% c(1952, 2007)) %>%
select(country, year, lifeExp)
# Convert to the wide data
plotdata_wide <- spread(plotdata_long, year, lifeExp)
names(plotdata_wide) <- c("Country", "year1952", "year2007")
# Create the dumbbell chart
ggplot(data = plotdata_wide, mapping = aes(y = Country,
x = year1952,
xend = year2007)) +
geom_dumbbell()
ggplot(data = plotdata_wide,
mapping = aes(y = reorder(Country, year1952),
x = year1952,
xend = year2007)) +
geom_dumbbell(size = 1.2, size_x = 3, size_xend = 3,
colour = "grey", colour_x = "blue",
colour_xend = "red") +
theme_minimal() +
labs(title = "Change in Life Expectancy",
subtitle = "From 1952 to 2007",
x = "Life Expectancy (years)",
y = "")
View(plotdata_long)
View(plotdata_wide)
