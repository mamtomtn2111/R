Vũ Huy
library(PerformanceAnalytics)
library(ggplot2)
library(mosaicData)
library(scales)
library(skimr)
library(dplyr)
data("CPS85")
mydata <- CPS85
str(mydata)
skim(mydata, wage, exper)
#vẽ biểu đồ
ggplot(mydata, aes(x = exper, y = wage))+
geom_point()
#loại giá trị outliner
plotdata <- mydata %>%
filter(wage<40)
ggplot(plotdata, aes(x = exper, y = wage))+
geom_point(size = 1.5, color = "cornflowerblue", alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, color = "cornflowerblue", alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red") +
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, color = "cornflowerblue", alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red") +
xsa
ggplot(plotdata, aes(x = exper, y = wage))+
geom_point(size = 1.5, color = "cornflowerblue", alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red") +
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, color = "cornflowerblue", alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 10))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 10))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar)
gc()
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.7)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red'))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.5)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red'))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.2)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red'))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red'))
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red')) +
labs(title = "The relationship between wage and Exper",
subtitle = "The current survey in USA",
x = "Experience (year)",
y = "Wage hourly",
caption = "source: www.dantri.com")
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red')) +
labs(title = "The relationship between wage and Exper",
subtitle = "The current survey in USA",
x = "Experience (year)",
y = "Wage hourly",
caption = "source: CPS85")
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red')) +
labs(title = "The relationship between wage and Exper",
subtitle = "The current survey in USA",
x = "Experience (year)",
y = "Wage hourly",
caption = "source: CPS85") +
facet_wrap(~sector)
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red')) +
labs(title = "The relationship between wage and Exper",
subtitle = "The current survey in USA",
x = "Experience (year)",
y = "Wage hourly",
caption = "source: CPS85") +
facet_wrap(~sector) +
theme_minimal()
# Vẽ lại mô hình
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", fomula = y ~ poly(x, 2),SE= FALSE,size = 1.5, color = "red")+
a
# Vẽ lại mô hình
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", fomula = y ~ poly(x, 2),SE= FALSE,size = 1.5, color = "red")
# Vẽ lại mô hình
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", fomula = y ~ poly(x, 2),se =FALSE,size = 1.5, color = "red")
# Vẽ lại mô hình
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", formula = y ~ poly(x, 2),se =FALSE,size = 1.5, color = "red")
#Build model
fit <- lm(wage ~ poly(exper, 2), data = plotdata)
summarise(fit)
summary(fit)
prediction_value <- fitted(fit)
residual_value <- residuals(fit
residual_value <- residuals(fit)
residual_value <- residuals(fit)
ketqua  <- data.frame(plotdata$wage, prediction_value, residual_value)
View(ketqua)
names(ketqua) <- c("Wages","Predictions","Residuals","Exper")
ketqua  <- data.frame(plotdata$wage, prediction_value, residual_value, plotdata$exper)
names(ketqua) <- c("Wages","Predictions","Residuals","Exper")
ketqua %>% ggplot() +
geom_point(aes(x = Exper, y = Wages),
col = "blue", size = 2, alpha = 0.8) +
geom_point(aes(x = Exper, y = Predictions),
col = red, size = 2, alpha = 0.8)
ketqua %>% ggplot() +
geom_point(aes(x = Exper, y = Wages),
col = "blue", size = 2, alpha = 0.8) +
geom_point(aes(x = Exper, y = Predictions),
col = "red", size = 2, alpha = 0.8)
update_data <- plotdata %>%
select(wage, duc, exper, age)
head(update_data)
update_data <- plotdata %>%
select(wage, duc, exper, age)
update_data <- plotdata %>%
select(wage, educ, exper, age)
head(update_data)
View(plotdata)
PerformanceAnalytics
PerformanceAnalytics
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
#correlation
chart.Correlation(update_data, histogram = TRUE, method = "pearson")
library(MASS)
library(MASS)
data(Bosson)
data("Bosson")
data("Bosson")
data("Boston")
gc()
data("Boston")
library(MASS)
str(Boston)
View(Boston)
??Boston
library(PerformanceAnalytics)
mydata <- Boston
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
autoplot(fit)
library(PerformanceAnalytics)
library(ggplot2)
library(mosaicData)
library(scales)
library(skimr)
library(dplyr)
library(ggfortify)
data("CPS85")
mydata <- CPS85
str(mydata)
skim(mydata, wage, exper)
#vẽ biểu đồ
ggplot(mydata, aes(x = exper, y = wage))+
geom_point()
#loại giá trị outliner
plotdata <- mydata %>%
filter(wage<40)
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red')) +
labs(title = "The relationship between wage and Exper",
subtitle = "The current survey in USA",
x = "Experience (year)",
y = "Wage hourly",
caption = "source: CPS85") +
facet_wrap(~sector) +
theme_minimal()
# Vẽ lại mô hình
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", formula = y ~ poly(x, 2),se =FALSE,size = 1.5, color = "red")
#Build model
fit <- lm(wage ~ poly(exper, 2), data = plotdata)
autoplot(fit)
summary(fit)
prediction_value <- fitted(fit)
residual_value <- residuals(fit)
ketqua  <- data.frame(plotdata$wage, prediction_value, residual_value, plotdata$exper)
names(ketqua) <- c("Wages","Predictions","Residuals","Exper")
ketqua %>% ggplot() +
geom_point(aes(x = Exper, y = Wages),
col = "blue", size = 2, alpha = 0.8) +
geom_point(aes(x = Exper, y = Predictions),
col = "red", size = 2, alpha = 0.8)
update_data <- plotdata %>%
select(wage, educ, exper, age)
head(update_data)
#correlation
chart.Correlation(update_data, histogram = TRUE, method = "pearson")
autoplot(fit)
update_data <- plotdata %>%
select(wage, educ, exper, age)
View(plotdata)
View(plotdata)
gc()
library(PerformanceAnalytics)
library(ggplot2)
library(mosaicData)
library(scales)
library(skimr)
library(dplyr)
library(ggfortify)
data("CPS85")
mydata <- CPS85
str(mydata)
skim(mydata, wage, exper)
#vẽ biểu đồ
ggplot(mydata, aes(x = exper, y = wage))+
geom_point()
#loại giá trị outliner
plotdata <- mydata %>%
filter(wage<40)
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", size = 1.5, color = "red")+
scale_x_continuous(breaks = seq(0, 60, 10))+
scale_y_continuous(breaks = seq(0, 40, 5), labels = dollar) +
scale_color_manual(values = c('blue','red')) +
labs(title = "The relationship between wage and Exper",
subtitle = "The current survey in USA",
x = "Experience (year)",
y = "Wage hourly",
caption = "source: CPS85") +
facet_wrap(~sector) +
theme_minimal()
# Vẽ lại mô hình
ggplot(plotdata, aes(x = exper, y = wage, color = sex))+
geom_point(size = 1.5, alpha = 0.4)+
geom_smooth(method = "lm", formula = y ~ poly(x, 2),se =FALSE,size = 1.5, color = "red")
#Build model
fit <- lm(wage ~ poly(exper, 2), data = plotdata)
autoplot(fit)
summary(fit)
prediction_value <- fitted(fit)
residual_value <- residuals(fit)
ketqua  <- data.frame(plotdata$wage, prediction_value, residual_value, plotdata$exper)
names(ketqua) <- c("Wages","Predictions","Residuals","Exper")
ketqua %>% ggplot() +
geom_point(aes(x = Exper, y = Wages),
col = "blue", size = 2, alpha = 0.8) +
geom_point(aes(x = Exper, y = Predictions),
col = "red", size = 2, alpha = 0.8)
update_data <- plotdata %>%
select(wage, educ, exper, age)
head(update_data)
#correlation
chart.Correlation(update_data, histogram = TRUE, method = "pearson")
autoplot(fit)
library(MASS)
library(ggplot2)
data("Boston")
dim(Boston)
library(tidyverse)
library(dplyr)
glimpse(Boston)
sum(is.na(Boston))
#Checking the missing values in each column
sapply(Boston, anyNA)
#Checking the duplicated values
sum(duplicated(Boston))
ggplot(data = Boston, mapping = aes(x = medv)) +
geom_histogram(binwidth = 5, color= "red",
fill = "cornflowerblue")
<- table(Boston$chas)
counts
counts <- table(Boston$chas)
counts
ggplot(data = Boston, mapping = aes(x = as.factor(chas))) +
geom_bar()
#Visualization by pie chart
ggplot(data = Boston, mapping = aes(x = factor(1), fill = as.factor(chas))) +
geom_bar(stat = "count") +
coord_polar("y")+
labs(fill = "chas",title = "The number of house in front of charles river")
View(Boston)
#Visualization by pie chart
ggplot(data = Boston, mapping = aes(x = factor(1), fill = as.factor(rad))) +
geom_bar(stat = "count") +
coord_polar("y")+
labs(fill = "chas",title = "The number of house in front of charles river")
#Visualization by pie chart
ggplot(data = Boston, mapping = aes(x = factor(1), fill = as.factor(chas))) +
geom_bar(stat = "count") +
coord_polar("y")+
labs(fill = "chas",title = "The number of house in front of charles river")
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat))+
geom_point(size = 2, colour = "indianred3", alpha = 0.5)
??Boston
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(chas)))+
geom_point(size = 2, colour = "indianred3", alpha = 0.5)
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(chas)))+
geom_point(size = 2, colour = "indianred3", alpha = 0.5)
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(chas)))+
geom_point(size = 2, alpha = 0.5)
#The correlation between medv and lstat
ggplot(data = Boston, mapping = aes(x = medv, y = lstat, colour = as.factor(rad)))+
geom_point(size = 2, alpha = 0.5)
install.packages("ggExtra")
library(ggExtra)
p <- ggplot(data = Boston, mapping = aes(x = medv, y = lstat, color = rad)) +
geom_point()
ggMarginal(p, type = "histogram")
ggMarginal(p, type = "histogram") ->s1
ggMarginal(p, type = "density") ->s2
ggMarginal(p, type = "boxplot") ->s3
ggMarginal(p, type = "violin") ->s4
ggMarginal(p, type = "densigram") ->s5
library(grid)
library(gridExtra)
grid.arrange(s1,s2,s3,s4,s5, ncol = 3)
library(corrplot)
Boston_num <-  Boston[, -c(4,9)]
Boston_num <-  Boston[, -c(4,9)]
#using the base
cor_matrix <- cor(Boston_num)
cor_matrix <- round(cor_matrix, 2)
ggcorrplot::ggcorrplot(cor_matrix, hc.order = True)
ggcorrplot::ggcorrplot(cor_matrix, hc.order = TRUE)
#Using the numerical correlation
corrplot(cor_matrix, method = "number", type = "upper", diag = FALSE)
corrplot(cor_matrix, method = "shade", type = "upper", diag = FALSE)
corrplot(cor_matrix, method = "shade", type = "lower", diag = FALSE)
all values
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(- key, scales = "free") +
theme_gray()
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(- key, scales = "free") +
theme_gray()
#Histogram of all values
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
#Histogram of all values
ggplot(Boston,mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
#Histogram of all values
ggplot(data = Boston,mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
)
#Histogram of all values
ggplot(gather(Boston),mapping = aes(x = value)) +
geom_histogram(bins = 10) +
facet_wrap(~ key, scales = "free") +
theme_gray()
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
hist.data.frame(Boston)
hist.data.frame(Boston)
install.packages("caToon")
install.packages("caTool")
install.packages("caTools")
mydata <-  Boston
gc()
mydata <-  Boston
View(mydata)
mydata <-  Boston
mydata["ID"] <- c(1:506)
set.seed(123)
View(mydata)
#Train model
library(caTools)
split <- sample.split(mydata$ID, SplitRatio = 2/3)
table(split)
training_data <- subset(mydata, split == TRUE)
testing_data <- subset(mydataa, split == FALSE)
testing_data <- subset(mydata, split == FALSE)
#model
model1 <- lm(medv ~ lstat + age + rm, data = training_data)
View(model1)
summary(model1)
#prediction in training data
prediction_training <- predict(model1, training_dât)
#prediction in training data
prediction_training <- predict(model1, training_data)
SSR_training <- sum((prediction_training - training_data$medv)^2)
SST_training <- sum((mean(training_data$medv) - training_data$medv)^2)
#The coeficient of datemindation
R2_training <- 1 - (SSR_training/SST_training)
testing_training <- predict(model1, testing_data)
SSR_testing <- sum((testing_training - testing_data$medv)^2)
SST_testing <- sum((mean(training_data$medv) - testing_data$medv)^2)
#The coeficient of datemindation
R2_training <- 1 - (SSR_testing/SST_testing)
prediction_training <- predict(model1, training_data)
SSR_training <- sum((prediction_training - training_data$medv)^2)
SST_training <- sum((mean(training_data$medv) - training_data$medv)^2)
#The coeficient of datemindation
R2_training <- 1 - (SSR_training/SST_training)
testing_training <- predict(model1, testing_data)
SSR_testing <- sum((testing_training - testing_data$medv)^2)
SST_testing <- sum((mean(training_data$medv) - testing_data$medv)^2)
#The coeficient of datemindation
R2_testing <- 1 - (SSR_testing/SST_testing)
install.packages("ggfortify")
data("Salaries", package = "mosaicData")
data("salaries", package = "mosaicData")
library(mosaicData)
data("salaries")
data("Salaries")
data("Salary")
data("salary")
data("Salaries")
library(carData)
data("Salaries")
force(Salaries)
View(Salaries)
data("CPS85")
mydata <- CPS85
View(mydata)
data(gapminder)
library(gapminder)
data(gapminder)
force(gapminder)
force(gapminder)
View(gapminder)
wages
View(CPS85)
library(mosaicData)
data("CPS85")
force(CPS85)
View(CPS85)
library(gapminder)
data(wages)
data(wages)
data(wages)
??wages
install.packages("ISLR")
library(ISLR)
data(wages)
library("ISLR")
??wages
